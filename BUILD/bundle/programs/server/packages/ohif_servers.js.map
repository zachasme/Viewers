{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:servers/both/index.js","meteor://ðŸ’»app/packages/ohif:servers/both/base.js","meteor://ðŸ’»app/packages/ohif:servers/both/collections/currentServer.js","meteor://ðŸ’»app/packages/ohif:servers/both/collections/index.js","meteor://ðŸ’»app/packages/ohif:servers/both/collections/servers.js","meteor://ðŸ’»app/packages/ohif:servers/both/lib/getCurrentServer.js","meteor://ðŸ’»app/packages/ohif:servers/both/lib/index.js","meteor://ðŸ’»app/packages/ohif:servers/both/schema/servers.js","meteor://ðŸ’»app/packages/ohif:servers/server/index.js","meteor://ðŸ’»app/packages/ohif:servers/server/methods.js","meteor://ðŸ’»app/packages/ohif:servers/server/publications.js","meteor://ðŸ’»app/packages/ohif:servers/server/startup.js","meteor://ðŸ’»app/packages/ohif:servers/server/lib/control.js","meteor://ðŸ’»app/packages/ohif:servers/server/lib/index.js"],"names":["module","watch","require","OHIF","v","servers","collections","export","CurrentServer","Mongo","Collection","_debugName","currentServer","Servers","getCurrentServer","findOne","serverConfiguration","_id","serverId","DICOMWebRequestOptions","DICOMWebServer","DIMSEPeer","DIMSEServer","UISettings","PrefetchSchema","MouseButtonToolSchema","PublicServerConfig","ServerConfiguration","SimpleSchema","serverNameDefinitions","type","String","label","max","serverTypeDefinitions","allowedValues","valuesLabels","optional","wadoUriRootDefinitions","availableMouseButtonTools","auth","logRequests","Boolean","defaultValue","logResponses","logTiming","name","wadoUriRoot","wadoRoot","imageRendering","qidoRoot","qidoSupportsIncludeField","requestOptions","aeTitle","hostAE","host","regEx","RegEx","WeakDomain","port","Number","min","server","supportsInstanceRetrievalByStudyUid","peers","minCount","studyListFunctionsEnabled","leftSidebarOpen","displaySetNavigationLoopOverSeries","displaySetNavigationMultipleViewports","displayEchoUltrasoundWorkflow","autoPositionMeasurementsTextCallOuts","studyListDateFilterNumDays","showStackLoadingProgressBar","order","displaySetCount","left","right","middle","verifyEmail","demoUserEnabled","ui","prefetch","defaultMouseButtonTools","dicomWeb","dimse","defaultServiceType","dropCollections","origin","Meteor","methods","serverFind","control","find","query","serverSave","save","serverSettings","serverSetActive","setActive","serverRemove","remove","publish","fields","_","startup","log","info","each","settings","endpoints","serverType","endpoint","clone","existingServer","newServerData","update","$set","insert","resetCurrentServer","custom","public","clean","private","JSON","stringify","writeCallback","error","affected","Error","count","newServer","fetch","options","upsert","removeStatus"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb;AAAmCF,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb;AAAuCF,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,iF;;;;;;;;;;;ACA1E,IAAIC,aAAJ;AAASH,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,QAAD,YAAMC,CAAN,EAAQ;AAACD,eAAKC,CAAL;AAAO;AAAhB,CAAzC,EAA2D,CAA3D;AAETD,KAAKE,OAAL,GAAe;AACXC,iBAAa;AADF,CAAf,6G;;;;;;;;;;;ACFAN,OAAOO,MAAP,CAAc;AAACC,iBAAc;AAAA,WAAIA,aAAJ;AAAA;AAAf,CAAd;AAAiD,IAAIC,cAAJ;AAAUT,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACO,OAAD,YAAOL,CAAP,EAAS;AAACK,YAAML,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAID,aAAJ;AAASH,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,MAAD,YAAMC,CAAN,EAAQ;AAACD,WAAKC,CAAL;AAAO;AAAhB,CAAzC,EAA2D,CAA3D;AAGhI;AACA,IAAMI,gBAAgB,IAAIC,MAAMC,UAAV,CAAqB,eAArB,CAAtB;AACAF,cAAcG,UAAd,GAA2B,eAA3B;AACAR,KAAKE,OAAL,CAAaC,WAAb,CAAyBM,aAAzB,GAAyCJ,aAAzC,wD;;;;;;;;;;;ACNAR,OAAOO,MAAP,CAAc;AAACC,iBAAc;AAAA,WAAIA,aAAJ;AAAA,GAAf;AAAiCK,WAAQ;AAAA,WAAIA,OAAJ;AAAA;AAAzC,CAAd;AAAqE,IAAIL,sBAAJ;AAAkBR,OAAOC,KAAP,CAAaC,QAAQ,oBAAR,CAAb,EAA2C;AAACM,eAAD,YAAeJ,CAAf,EAAiB;AAACI,oBAAcJ,CAAd;AAAgB;AAAlC,CAA3C,EAA+E,CAA/E;AAAkF,IAAIS,gBAAJ;AAAYb,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACW,SAAD,YAAST,CAAT,EAAW;AAACS,cAAQT,CAAR;AAAU;AAAtB,CAArC,EAA6D,CAA7D,0G;;;;;;;;;;;ACArLJ,OAAOO,MAAP,CAAc;AAACM,WAAQ;AAAA,WAAIA,OAAJ;AAAA;AAAT,CAAd;AAAqC,IAAIJ,cAAJ;AAAUT,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACO,OAAD,YAAOL,CAAP,EAAS;AAACK,YAAML,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAID,aAAJ;AAASH,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,MAAD,YAAMC,CAAN,EAAQ;AAACD,WAAKC,CAAL;AAAO;AAAhB,CAAzC,EAA2D,CAA3D;AAEpH;AAEA;AACA,IAAMS,UAAU,IAAIJ,MAAMC,UAAV,CAAqB,SAArB,CAAhB,C,CACA;AACA;;AACAG,QAAQF,UAAR,GAAqB,SAArB;AACAR,KAAKE,OAAL,CAAaC,WAAb,CAAyBD,OAAzB,GAAmCQ,OAAnC,qE;;;;;;;;;;;ACTA,IAAIV,aAAJ;AAASH,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,QAAD,YAAMC,CAAN,EAAQ;AAACD,eAAKC,CAAL;AAAO;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIS,gBAAJ;AAAA,IAAYL,sBAAZ;AAA0BR,OAAOC,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACW,WAAD,YAAST,CAAT,EAAW;AAACS,kBAAQT,CAAR;AAAU,KAAtB;AAAuBI,iBAAvB,YAAqCJ,CAArC,EAAuC;AAACI,wBAAcJ,CAAd;AAAgB;AAAxD,CAA7D,EAAuH,CAAvH;;AAGjG;;GAGAD,KAAKE,OAAL,CAAaS,gBAAb,GAAgC,YAAM;AAClC,QAAMF,gBAAgBJ,cAAcO,OAAd,EAAtB;;AAEA,QAAI,CAACH,aAAL,EAAoB;AAChB;AACH;;AAED,QAAMI,sBAAsBH,QAAQE,OAAR,CAAgB;AAAEE,aAAKL,cAAcM;AAArB,KAAhB,CAA5B;AAEA,WAAOF,mBAAP;AACH,CAVD,8G;;;;;;;;;;;ACNAhB,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,iE;;;;;;;;;;;ACAAF,OAAOO,MAAP,CAAc;AAACY,4BAAuB;AAAA,eAAIA,sBAAJ;AAAA,KAAxB;AAAmDC,oBAAe;AAAA,eAAIA,cAAJ;AAAA,KAAlE;AAAqFC,eAAU;AAAA,eAAIA,SAAJ;AAAA,KAA/F;AAA6GC,iBAAY;AAAA,eAAIA,WAAJ;AAAA,KAAzH;AAAyIC,gBAAW;AAAA,eAAIA,UAAJ;AAAA,KAApJ;AAAmKC,oBAAe;AAAA,eAAIA,cAAJ;AAAA,KAAlL;AAAqMC,2BAAsB;AAAA,eAAIA,qBAAJ;AAAA,KAA3N;AAAqPC,wBAAmB;AAAA,eAAIA,kBAAJ;AAAA,KAAxQ;AAA+Rb,aAAQ;AAAA,eAAIA,OAAJ;AAAA,KAAvS;AAAmTc,yBAAoB;AAAA,eAAIA,mBAAJ;AAAA;AAAvU,CAAd;AAA+W,IAAIC,qBAAJ;AAAiB5B,OAAOC,KAAP,CAAaC,QAAQ,6BAAR,CAAb,EAAoD;AAAC0B,gBAAD,YAAcxB,CAAd,EAAgB;AAACwB,uBAAaxB,CAAb;AAAe;AAAhC,CAApD,EAAsF,CAAtF;AAEhY,IAAMyB,wBAAwB;AAC1BC,UAAMC,MADoB;AAE1BC,WAAO,aAFmB;AAG1BC,SAAK;AAHqB,CAA9B;AAMA,IAAMC,wBAAwB;AAC1BJ,UAAMC,MADoB;AAE1BC,WAAO,aAFmB;AAG1BG,mBAAe,CAAC,UAAD,EAAa,OAAb,CAHW;AAI1BC,kBAAc,CAAC,WAAD,EAAc,OAAd,CAJY;AAK1BC,cAAU;AALgB,CAA9B;AAQA,IAAMC,yBAAyB;AAC3BR,UAAMC,MADqB;AAE3BC,WAAO,eAFoB;AAG3BC,SAAK;AAHsB,CAA/B;AAMA,IAAMM,4BAA4B,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,aAAxB,CAAlC;AAEO,IAAMpB,yBAAyB,IAAIS,YAAJ,CAAiB;AACnDY,UAAM;AACFV,cAAMC,MADJ;AAEFC,eAAO,gBAFL;AAGFK,kBAAU;AAHR,KAD6C;AAMnDI,iBAAa;AACTX,cAAMY,OADG;AAETC,sBAAc,IAFL;AAGTX,eAAO;AAHE,KANsC;AAWnDY,kBAAc;AACVd,cAAMY,OADI;AAEVC,sBAAc,KAFJ;AAGVX,eAAO;AAHG,KAXqC;AAgBnDa,eAAW;AACPf,cAAMY,OADC;AAEPC,sBAAc,IAFP;AAGPX,eAAO;AAHA;AAhBwC,CAAjB,CAA/B;AAuBA,IAAMZ,iBAAiB,IAAIQ,YAAJ,CAAiB;AAC3CkB,UAAMjB,qBADqC;AAE3CC,UAAMI,qBAFqC;AAG3Ca,iBAAaT,sBAH8B;AAI3CU,cAAU;AACNlB,cAAMC,MADA;AAENC,eAAO,WAFD;AAGNC,aAAK;AAHC,KAJiC;AAS3CgB,oBAAgB;AACZnB,cAAMC,MADM;AAEZC,eAAO,iBAFK;AAGZG,uBAAe,CAAC,SAAD,EAAY,SAAZ,CAHH;AAIZC,sBAAc,CAAC,UAAD,EAAa,SAAb;AAJF,KAT2B;AAe3Cc,cAAU;AACNpB,cAAMC,MADA;AAENC,eAAO,WAFD;AAGNC,aAAK;AAHC,KAfiC;AAoB3CkB,8BAA0B;AACtBrB,cAAMY,OADgB;AAEtBV,eAAO,gCAFe;AAGtBW,sBAAc;AAHQ,KApBiB;AAyB3CS,oBAAgB;AACZtB,cAAMX,sBADM;AAEZa,eAAO;AAFK;AAzB2B,CAAjB,CAAvB;AA+BA,IAAMX,YAAY,IAAIO,YAAJ,CAAiB;AACtCyB,aAAS;AACLvB,cAAMC,MADD;AAELC,eAAO;AAFF,KAD6B;AAKtCsB,YAAQ;AACJxB,cAAMC,MADF;AAEJC,eAAO,SAFH;AAGJK,kBAAU;AAHN,KAL8B;AAUtCkB,UAAM;AACFzB,cAAMC,MADJ;AAEFC,eAAO,gBAFL;AAGFwB,eAAO5B,aAAa6B,KAAb,CAAmBC;AAHxB,KAVgC;AAetCC,UAAM;AACF7B,cAAM8B,MADJ;AAEF5B,eAAO,MAFL;AAGF6B,aAAK,CAHH;AAIFlB,sBAAc,KAJZ;AAKFV,aAAK;AALH,KAfgC;AAsBtC,eAAS;AACLH,cAAMY,OADD;AAELV,eAAO,SAFF;AAGLW,sBAAc;AAHT,KAtB6B;AA2BtCmB,YAAQ;AACJhC,cAAMY,OADF;AAEJV,eAAO,QAFH;AAGJW,sBAAc;AAHV,KA3B8B;AAgCtCoB,yCAAqC;AACjCjC,cAAMY,OAD2B;AAEjCV,eAAO,yCAF0B;AAGjCW,sBAAc;AAHmB;AAhCC,CAAjB,CAAlB;AAuCA,IAAMrB,cAAc,IAAIM,YAAJ,CAAiB;AACxCkB,UAAMjB,qBADkC;AAExCC,UAAMI,qBAFkC;AAGxCa,iBAAaT,sBAH2B;AAIxCc,oBAAgB;AACZtB,cAAMX,sBADM;AAEZa,eAAO;AAFK,KAJwB;AAQxCgC,WAAO;AACHlC,cAAM,CAACT,SAAD,CADH;AAEHW,eAAO,WAFJ;AAGHiC,kBAAU;AAHP;AARiC,CAAjB,CAApB;AAeA,IAAM1C,aAAa,IAAIK,YAAJ,CAAiB;AACvCsC,+BAA2B;AACvBpC,cAAMY,OADiB;AAEvBV,eAAO,+BAFgB;AAGvBW,sBAAc;AAHS,KADY;AAMvCwB,qBAAiB;AACbrC,cAAMY,OADO;AAEbV,eAAO,+BAFM;AAGbW,sBAAc;AAHD,KANsB;AAWvCyB,wCAAoC;AAChCtC,cAAMY,OAD0B;AAEhCV,eAAO,yGAFyB;AAGhCW,sBAAc;AAHkB,KAXG;AAgBvC0B,2CAAuC;AACnCvC,cAAMY,OAD6B;AAEnCV,eAAO,yFAF4B;AAGnCW,sBAAc;AAHqB,KAhBA;AAqBvC2B,mCAA+B;AAC3BxC,cAAMY,OADqB;AAE3BV,eAAO,wDAFoB;AAG3BW,sBAAc;AAHa,KArBQ;AA0BvC4B,0CAAsC;AAClCzC,cAAMC,MAD4B;AAElCC,eAAO,mEAF2B;AAGlCW,sBAAc;AAHoB,KA1BC;AA+BvC6B,gCAA4B;AACxB1C,cAAM8B,MADkB;AAExB5B,eAAO,qDAFiB;AAGxB6B,aAAK;AAHmB,KA/BW;AAoCvCY,iCAA6B;AACzB3C,cAAMY,OADmB;AAEzBV,eAAO,oFAFkB;AAGzBW,sBAAc;AAHW;AApCU,CAAjB,CAAnB;AA2CA,IAAMnB,iBAAiB,IAAII,YAAJ,CAAiB;AAC3C8C,WAAO;AACH5C,cAAMC,MADH;AAEHC,eAAO,gBAFJ;AAGHG,uBAAe,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,CAHZ;AAIHE,kBAAU;AAJP,KADoC;AAO3CsC,qBAAiB;AACb7C,cAAM8B,MADO;AAEb5B,eAAO,mBAFM;AAGb6B,aAAK,CAHQ;AAIblB,sBAAc;AAJD;AAP0B,CAAjB,CAAvB;AAeA,IAAMlB,wBAAwB,IAAIG,YAAJ,CAAiB;AAClDgD,UAAM;AACF9C,cAAMC,MADJ;AAEFC,eAAO,mBAFL;AAGFG,uBAAeI,yBAHb;AAIFF,kBAAU;AAJR,KAD4C;AAOlDwC,WAAO;AACH/C,cAAMC,MADH;AAEHC,eAAO,oBAFJ;AAGHG,uBAAeI,yBAHZ;AAIHF,kBAAU;AAJP,KAP2C;AAalDyC,YAAQ;AACJhD,cAAMC,MADF;AAEJC,eAAO,qBAFH;AAGJG,uBAAeI,yBAHX;AAIJF,kBAAU;AAJN;AAb0C,CAAjB,CAA9B;AAqBA,IAAMX,qBAAqB,IAAIE,YAAJ,CAAiB;AAC/CmD,iBAAa;AACTjD,cAAMY,OADG;AAETV,eAAO,cAFE;AAGTW,sBAAc;AAHL,KADkC;AAM/CqC,qBAAiB;AACblD,cAAMY,OADO;AAEbV,eAAO,wDAFM;AAGbW,sBAAc;AAHD,KAN8B;AAW/CsC,QAAI;AACAnD,cAAMP,UADN;AAEAS,eAAO;AAFP,KAX2C;AAe/CkD,cAAU;AACNpD,cAAMN,cADA;AAENQ,eAAO;AAFD,KAfqC;AAmB/CmD,6BAAyB;AACrBrD,cAAML,qBADe;AAErBO,eAAO;AAFc;AAnBsB,CAAjB,CAA3B;AAyBA,IAAMnB,UAAU,IAAIe,YAAJ,CAAiB;AACpCwD,cAAU;AACNtD,cAAM,CAACV,cAAD,CADA;AAENY,eAAO,kBAFD;AAGNK,kBAAU;AAHJ,KAD0B;AAMpCgD,WAAO;AACHvD,cAAM,CAACR,WAAD,CADH;AAEHU,eAAO,eAFJ;AAGHK,kBAAU;AAHP;AAN6B,CAAjB,CAAhB;AAaA,IAAMV,sBAAsB,IAAIC,YAAJ,CAAiB;AAChDvB,aAAS;AACLyB,cAAMjB,OADD;AAELmB,eAAO;AAFF,KADuC;AAKhDsD,wBAAoB;AAChBxD,cAAMC,MADU;AAEhBC,eAAO,sBAFS;AAGhBW,sBAAc;AAHE,KAL4B;AAUhD4C,qBAAiB;AACbzD,cAAMY,OADO;AAEbV,eAAO,2BAFM;AAGbW,sBAAc;AAHD,KAV+B;AAehD,cAAQ;AACJb,cAAMJ,kBADF;AAEJM,eAAO;AAFH,KAfwC;AAmBhDwD,YAAQ;AACJ1D,cAAMC,MADF;AAEJC,eAAO,QAFH;AAGJK,kBAAU;AAHN;AAnBwC,CAAjB,CAA5B,8G;;;;;;;;;;;ACzPPrC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb;AAA2CF,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb;AAAsCF,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb;AAAsCF,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,iF;;;;;;;;;;;ACAvH,IAAIuF,eAAJ;AAAWzF,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACuF,UAAD,YAAQrF,CAAR,EAAU;AAACqF,iBAAOrF,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAID,aAAJ;AAASH,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,QAAD,YAAMC,CAAN,EAAQ;AAACD,eAAKC,CAAL;AAAO;AAAhB,CAAzC,EAA2D,CAA3D;AAGnFqF,OAAOC,OAAP,CAAe;AACXC,gBAAY;AAAA,eAASxF,KAAKE,OAAL,CAAauF,OAAb,CAAqBC,IAArB,CAA0BC,KAA1B,CAAT;AAAA,KADD;AAEXC,gBAAY;AAAA,eAAkB5F,KAAKE,OAAL,CAAauF,OAAb,CAAqBI,IAArB,CAA0BC,cAA1B,CAAlB;AAAA,KAFD;AAGXC,qBAAiB;AAAA,eAAY/F,KAAKE,OAAL,CAAauF,OAAb,CAAqBO,SAArB,CAA+BjF,QAA/B,CAAZ;AAAA,KAHN;AAIXkF,kBAAc;AAAA,eAAYjG,KAAKE,OAAL,CAAauF,OAAb,CAAqBS,MAArB,CAA4BnF,QAA5B,CAAZ;AAAA;AAJH,CAAf,6G;;;;;;;;;;;ACHA,IAAIuE,eAAJ;AAAWzF,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACuF,UAAD,YAAQrF,CAAR,EAAU;AAACqF,iBAAOrF,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIS,gBAAJ;AAAA,IAAYL,sBAAZ;AAA0BR,OAAOC,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACW,WAAD,YAAST,CAAT,EAAW;AAACS,kBAAQT,CAAR;AAAU,KAAtB;AAAuBI,iBAAvB,YAAqCJ,CAArC,EAAuC;AAACI,wBAAcJ,CAAd;AAAgB;AAAxD,CAA7D,EAAuH,CAAvH;AAGpG;AACA;AACAqF,OAAOa,OAAP,CAAe,SAAf,EAA0B;AAAA,WAAMzF,QAAQgF,IAAR,CAAa,EAAb,EAAiB;AAC7CU,gBAAQ;AAAE,sCAA0B;AAA5B;AADqC,KAAjB,CAAN;AAAA,CAA1B;AAIAd,OAAOa,OAAP,CAAe,eAAf,EAAgC;AAAA,WAAM9F,cAAcqF,IAAd,EAAN;AAAA,CAAhC,8G;;;;;;;;;;;ACTA,IAAIJ,eAAJ;AAAWzF,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACuF,UAAD,YAAQrF,CAAR,EAAU;AAACqF,iBAAOrF,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;;AAA+D,IAAIoG,UAAJ;;AAAMxG,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACsG,KAAD,YAAGpG,CAAH,EAAK;AAACoG,YAAEpG,CAAF;AAAI;AAAV,CAA1C,EAAsD,CAAtD;AAAyD,IAAID,aAAJ;AAASH,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,QAAD,YAAMC,CAAN,EAAQ;AAACD,eAAKC,CAAL;AAAO;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIS,gBAAJ;AAAYb,OAAOC,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACW,WAAD,YAAST,CAAT,EAAW;AAACS,kBAAQT,CAAR;AAAU;AAAtB,CAA7D,EAAqF,CAArF;AAAwF,IAAIuB,4BAAJ;AAAwB3B,OAAOC,KAAP,CAAaC,QAAQ,4CAAR,CAAb,EAAmE;AAACyB,uBAAD,YAAqBvB,CAArB,EAAuB;AAACuB,8BAAoBvB,CAApB;AAAsB;AAA9C,CAAnE,EAAmH,CAAnH;AAM5U;AACAqF,OAAOgB,OAAP,CAAe,YAAW;AACtBtG,SAAKuG,GAAL,CAASC,IAAT,CAAc,sDAAd;;AAEAH,MAAEI,IAAF,CAAOnB,OAAOoB,QAAP,CAAgBxG,OAAvB,EAAgC,UAASyG,SAAT,EAAoBC,UAApB,EAAgC;AAC5DP,UAAEI,IAAF,CAAOE,SAAP,EAAkB,UAASE,QAAT,EAAmB;AACjC,gBAAMlD,SAAS0C,EAAES,KAAF,CAAQD,QAAR,CAAf;;AACAlD,mBAAO0B,MAAP,GAAgB,MAAhB;AACA1B,mBAAOhC,IAAP,GAAciF,UAAd,CAHiC,CAKjC;;AACA,gBAAMG,iBAAiBrG,QAAQE,OAAR,CAAgB;AACnC+B,sBAAMgB,OAAOhB,IADsB;AAEnChB,sBAAMgC,OAAOhC,IAFsB;AAGnC0D,wBAAQ1B,OAAO0B;AAHoB,aAAhB,CAAvB,CANiC,CAYjC;;AACA,gBAAI0B,cAAJ,EAAoB;AAChB,oBAAMC,gBAAgBX,EAAES,KAAF,CAAQC,cAAR,CAAtB;;AACA,uBAAOC,cAAclG,GAArB;AACAJ,wBAAQuG,MAAR,CAAeF,eAAejG,GAA9B,EAAmC;AAAEoG,0BAAMF;AAAR,iBAAnC;AACH,aAJD,MAIO;AACHtG,wBAAQyG,MAAR,CAAexD,MAAf;AACH;AACJ,SApBD;AAqBH,KAtBD;;AAwBA3D,SAAKE,OAAL,CAAauF,OAAb,CAAqB2B,kBAArB;AACH,CA5BD,E,CA8BA;;AACA9B,OAAOgB,OAAP,CAAe,YAAM;AACjB;AACA;AACA,QAAIe,SAAS;AACT,mBAAS/B,OAAOoB,QAAP,CAAgBW,MADhB;AAET,kBAAQ/B,OAAOoB,QAAP,CAAgBY,MAAhB,CAAuBD;AAFtB,KAAb,CAHiB,CAQjB;;AACA,WAAO/B,OAAOoB,QAAP,CAAgBW,MAAvB;AACA,WAAO/B,OAAOoB,QAAP,CAAgBY,MAAhB,CAAuBD,MAA9B;AAEA7F,wBAAoB+F,KAApB,CAA0BjC,OAAOoB,QAAjC,EAZiB,CAcjB;AACA;AACA;;AAEApB,WAAOoB,QAAP,CAAgBW,MAAhB,GAAyBA,OAAOG,OAAhC;AACAlC,WAAOoB,QAAP,CAAgBY,MAAhB,CAAuBD,MAAvB,GAAgCA,OAAOC,MAAvC;AAEAtH,SAAKuG,GAAL,CAASC,IAAT,CAAciB,KAAKC,SAAL,CAAepC,OAAOoB,QAAtB,EAAgC,IAAhC,EAAsC,CAAtC,CAAd;AACH,CAtBD,8G;;;;;;;;;;;ACtCA,IAAIpB,eAAJ;AAAWzF,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACuF,UAAD,YAAQrF,CAAR,EAAU;AAACqF,iBAAOrF,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAID,aAAJ;AAASH,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,QAAD,YAAMC,CAAN,EAAQ;AAACD,eAAKC,CAAL;AAAO;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIS,gBAAJ;AAAA,IAAYL,sBAAZ;AAA0BR,OAAOC,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACW,WAAD,YAAST,CAAT,EAAW;AAACS,kBAAQT,CAAR;AAAU,KAAtB;AAAuBI,iBAAvB,YAAqCJ,CAArC,EAAuC;AAACI,wBAAcJ,CAAd;AAAgB;AAAxD,CAA7D,EAAuH,CAAvH;AAI3KD,KAAKE,OAAL,CAAauF,OAAb,GAAuB;AACnBkC,iBADmB,YACLC,KADK,EACEC,QADF,EACY;AAC3B,YAAID,KAAJ,EAAW;AACP,kBAAM,IAAItC,OAAOwC,KAAX,CAAiB,YAAjB,EAA+BF,KAA/B,CAAN;AACH;AACJ,KALkB;AAOnBR,sBAPmB,cAOE;AACjB,YAAM3G,gBAAgBJ,cAAcO,OAAd,EAAtB;;AACA,YAAIH,iBAAiBC,QAAQgF,IAAR,CAAa;AAAE5E,iBAAKL,cAAcM;AAArB,SAAb,EAA8CgH,KAA9C,EAArB,EAA4E;AACxE;AACH;;AAED,YAAMC,YAAYtH,QAAQE,OAAR,CAAgB;AAC9ByE,oBAAQ,MADsB;AAE9B1D,kBAAM2D,OAAOoB,QAAP,CAAgBvB,kBAAhB,IAAsC;AAFd,SAAhB,CAAlB;;AAKA,YAAI6C,SAAJ,EAAe;AACX3H,0BAAc6F,MAAd,CAAqB,EAArB;AACA7F,0BAAc8G,MAAd,CAAqB;AACjBpG,0BAAUiH,UAAUlH;AADH,aAArB;AAGH;AACJ,KAxBkB;AA0BnB4E,QA1BmB,YA0BdC,KA1Bc,EA0BP;AACR,eAAOjF,QAAQgF,IAAR,CAAaC,KAAb,EAAoBsC,KAApB,EAAP;AACH,KA5BkB;AA8BnBpC,QA9BmB,YA8BdC,cA9Bc,EA8BE;AACjB,YAAMH,QAAQ;AACV7E,iBAAKgF,eAAehF;AADV,SAAd;AAGA,YAAMoH,UAAU;AACZC,oBAAQ;AADI,SAAhB;;AAIA,YAAI,CAACrC,eAAehF,GAApB,EAAyB;AACrB,mBAAOgF,eAAehF,GAAtB;AACH;;AAED,eAAOJ,QAAQuG,MAAR,CAAetB,KAAf,EAAsBG,cAAtB,EAAsCoC,OAAtC,EAA+C,KAAKP,aAApD,CAAP;AACH,KA3CkB;AA6CnB3B,aA7CmB,YA6CTjF,QA7CS,EA6CC;AAChBV,sBAAc6F,MAAd,CAAqB,EAArB;AACA7F,sBAAc8G,MAAd,CAAqB;AACjBpG,sBAAUA;AADO,SAArB;AAGH,KAlDkB;AAoDnBmF,UApDmB,YAoDZnF,QApDY,EAoDF;AACb,YAAM4E,QAAQ;AACV7E,iBAAKC;AADK,SAAd;AAIA,YAAMqH,eAAe1H,QAAQwF,MAAR,CAAeP,KAAf,EAAsB,KAAKgC,aAA3B,CAArB;AAEA3H,aAAKE,OAAL,CAAauF,OAAb,CAAqB2B,kBAArB;AAEA,eAAOgB,YAAP;AACH;AA9DkB,CAAvB,6G;;;;;;;;;;;ACJAvI,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,0E","file":"/packages/ohif_servers.js","sourcesContent":["import './base.js';\nimport './collections';\nimport './lib';\n","import { OHIF } from 'meteor/ohif:core';\n\nOHIF.servers = {\n    collections: {}\n};\n","import { Mongo } from 'meteor/mongo';\nimport { OHIF } from 'meteor/ohif:core';\n\n// CurrentServer is a single document collection to describe which of the Servers is being used\nconst CurrentServer = new Mongo.Collection('currentServer');\nCurrentServer._debugName = 'CurrentServer';\nOHIF.servers.collections.currentServer = CurrentServer;\n\nexport { CurrentServer };\n","import { CurrentServer } from './currentServer.js';\nimport { Servers } from './servers.js';\n\nexport { CurrentServer, Servers };\n","import { Mongo } from 'meteor/mongo';\nimport { OHIF } from 'meteor/ohif:core';\n// import { Servers as ServerSchema } from 'meteor/ohif:servers/both/schema/servers.js';\n\n// Servers describe the DICOM servers configurations\nconst Servers = new Mongo.Collection('servers');\n// TODO: Make the Schema match what we are currently sticking into the Collection\n//Servers.attachSchema(ServerSchema);\nServers._debugName = 'Servers';\nOHIF.servers.collections.servers = Servers;\n\nexport { Servers };\n","import { OHIF } from 'meteor/ohif:core';\nimport { Servers, CurrentServer } from 'meteor/ohif:servers/both/collections';\n\n/**\n * Retrieves the current server configuration used to retrieve studies\n */\nOHIF.servers.getCurrentServer = () => {\n    const currentServer = CurrentServer.findOne();\n\n    if (!currentServer) {\n        return;\n    }\n\n    const serverConfiguration = Servers.findOne({ _id: currentServer.serverId });\n\n    return serverConfiguration;\n};\n","import './getCurrentServer.js';\n","import { SimpleSchema } from 'meteor/aldeed:simple-schema';\n\nconst serverNameDefinitions = {\n    type: String,\n    label: 'Server Name',\n    max: 100\n};\n\nconst serverTypeDefinitions = {\n    type: String,\n    label: 'Server Type',\n    allowedValues: ['dicomWeb', 'dimse'],\n    valuesLabels: ['DICOM Web', 'DIMSE'],\n    optional: true\n};\n\nconst wadoUriRootDefinitions = {\n    type: String,\n    label: 'WADO URI root',\n    max: 1000\n};\n\nconst availableMouseButtonTools = ['wwwc', 'zoom', 'pan', 'stackScroll'];\n\nexport const DICOMWebRequestOptions = new SimpleSchema({\n    auth: {\n        type: String,\n        label: 'Authentication',\n        optional: true\n    },\n    logRequests: {\n        type: Boolean,\n        defaultValue: true,\n        label: 'Requests'\n    },\n    logResponses: {\n        type: Boolean,\n        defaultValue: false,\n        label: 'Responses'\n    },\n    logTiming: {\n        type: Boolean,\n        defaultValue: true,\n        label: 'Timing'\n    }\n});\n\nexport const DICOMWebServer = new SimpleSchema({\n    name: serverNameDefinitions,\n    type: serverTypeDefinitions,\n    wadoUriRoot: wadoUriRootDefinitions,\n    wadoRoot: {\n        type: String,\n        label: 'WADO root',\n        max: 1000\n    },\n    imageRendering: {\n        type: String,\n        label: 'Image rendering',\n        allowedValues: ['wadouri', 'orthanc'],\n        valuesLabels: ['WADO URI', 'ORTHANC']\n    },\n    qidoRoot: {\n        type: String,\n        label: 'QIDO root',\n        max: 1000\n    },\n    qidoSupportsIncludeField: {\n        type: Boolean,\n        label: 'QIDO supports including fields',\n        defaultValue: false\n    },\n    requestOptions: {\n        type: DICOMWebRequestOptions,\n        label: 'Request Options'\n    }\n});\n\nexport const DIMSEPeer = new SimpleSchema({\n    aeTitle: {\n        type: String,\n        label: 'AE Title'\n    },\n    hostAE: {\n        type: String,\n        label: 'AE Host',\n        optional: true\n    },\n    host: {\n        type: String,\n        label: 'Host Domain/IP',\n        regEx: SimpleSchema.RegEx.WeakDomain\n    },\n    port: {\n        type: Number,\n        label: 'Port',\n        min: 1,\n        defaultValue: 11112,\n        max: 65535\n    },\n    default: {\n        type: Boolean,\n        label: 'Default',\n        defaultValue: false\n    },\n    server: {\n        type: Boolean,\n        label: 'Server',\n        defaultValue: false\n    },\n    supportsInstanceRetrievalByStudyUid: {\n        type: Boolean,\n        label: 'Supports instance retrieval by StudyUid',\n        defaultValue: true\n    }\n});\n\nexport const DIMSEServer = new SimpleSchema({\n    name: serverNameDefinitions,\n    type: serverTypeDefinitions,\n    wadoUriRoot: wadoUriRootDefinitions,\n    requestOptions: {\n        type: DICOMWebRequestOptions,\n        label: 'Request Options'\n    },\n    peers: {\n        type: [DIMSEPeer],\n        label: 'Peer List',\n        minCount: 1\n    }\n});\n\nexport const UISettings = new SimpleSchema({\n    studyListFunctionsEnabled: {\n        type: Boolean,\n        label: 'Study List Functions Enabled?',\n        defaultValue: true\n    },\n    leftSidebarOpen: {\n        type: Boolean,\n        label: 'Left sidebar open by default?',\n        defaultValue: false\n    },\n    displaySetNavigationLoopOverSeries: {\n        type: Boolean,\n        label: 'The UP/DOWN display set navigation buttons will start over when reach the last display set in viewport?',\n        defaultValue: true\n    },\n    displaySetNavigationMultipleViewports: {\n        type: Boolean,\n        label: 'The UP/DOWN display set navigation buttons will iterate over all the viewports at once?',\n        defaultValue: false\n    },\n    displayEchoUltrasoundWorkflow: {\n        type: Boolean,\n        label: 'Enable cine dialog enhancements for multiframe images.',\n        defaultValue: false\n    },\n    autoPositionMeasurementsTextCallOuts: {\n        type: String,\n        label: 'Auto position text call-outs for measurements when creating them.',\n        defaultValue: 'TRBL'\n    },\n    studyListDateFilterNumDays: {\n        type: Number,\n        label: 'Number of days to be used on Study List date filter',\n        min: 1\n    },\n    showStackLoadingProgressBar: {\n        type: Boolean,\n        label: 'Show a progress bar closest to the thumbnail showing how much the stack has loaded',\n        defaultValue: true\n    }\n});\n\nexport const PrefetchSchema = new SimpleSchema({\n    order: {\n        type: String,\n        label: 'Prefetch Order',\n        allowedValues: ['topdown', 'downward', 'closest'],\n        optional: false\n    },\n    displaySetCount: {\n        type: Number,\n        label: 'Display Set Count',\n        min: 1,\n        defaultValue: 1\n    }\n});\n\nexport const MouseButtonToolSchema = new SimpleSchema({\n    left: {\n        type: String,\n        label: 'Left Mouse Button',\n        allowedValues: availableMouseButtonTools,\n        optional: true\n    },\n    right: {\n        type: String,\n        label: 'Right Mouse Button',\n        allowedValues: availableMouseButtonTools,\n        optional: true\n    },\n    middle: {\n        type: String,\n        label: 'Middle Mouse Button',\n        allowedValues: availableMouseButtonTools,\n        optional: true\n    }\n});\n\nexport const PublicServerConfig = new SimpleSchema({\n    verifyEmail: {\n        type: Boolean,\n        label: 'Verify Email',\n        defaultValue: false\n    },\n    demoUserEnabled: {\n        type: Boolean,\n        label: 'Creates demo user on startup and show TestDrive button',\n        defaultValue: true\n    },\n    ui: {\n        type: UISettings,\n        label: 'UI Settings'\n    },\n    prefetch: {\n        type: PrefetchSchema,\n        label: 'Prefetch settings'\n    },\n    defaultMouseButtonTools: {\n        type: MouseButtonToolSchema,\n        label: 'Default Mouse Button Tools'\n    }\n});\n\nexport const Servers = new SimpleSchema({\n    dicomWeb: {\n        type: [DICOMWebServer],\n        label: 'DICOMWeb Servers',\n        optional: true\n    },\n    dimse: {\n        type: [DIMSEServer],\n        label: 'DIMSE Servers',\n        optional: true\n    }\n});\n\nexport const ServerConfiguration = new SimpleSchema({\n    servers: {\n        type: Servers,\n        label: 'Servers'\n    },\n    defaultServiceType: {\n        type: String,\n        label: 'Default Service Type',\n        defaultValue: 'dicomWeb'\n    },\n    dropCollections: {\n        type: Boolean,\n        label: 'Drop database collections',\n        defaultValue: false\n    },\n    public: {\n        type: PublicServerConfig,\n        label: 'Public Server Configuration',\n    },\n    origin: {\n        type: String,\n        label: 'Origin',\n        optional: true\n    }\n});\n","import './publications.js';\nimport './methods.js';\nimport './startup.js';\nimport './lib';\n","import { Meteor } from 'meteor/meteor';\nimport { OHIF } from 'meteor/ohif:core';\n\nMeteor.methods({\n    serverFind: query => OHIF.servers.control.find(query),\n    serverSave: serverSettings => OHIF.servers.control.save(serverSettings),\n    serverSetActive: serverId => OHIF.servers.control.setActive(serverId),\n    serverRemove: serverId => OHIF.servers.control.remove(serverId)\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Servers, CurrentServer } from 'meteor/ohif:servers/both/collections';\n\n// When publishing Servers Collection, do not publish the requestOptions.headers\n// field in case any authentication information is being passed\nMeteor.publish('servers', () => Servers.find({}, {\n    fields: { 'requestOptions.headers': 0 }\n}));\n\nMeteor.publish('currentServer', () => CurrentServer.find());\n","import { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\nimport { Servers } from 'meteor/ohif:servers/both/collections';\nimport { ServerConfiguration } from 'meteor/ohif:servers/both/schema/servers.js';\n\n// Check the servers on meteor startup\nMeteor.startup(function() {\n    OHIF.log.info('Updating servers information from JSON configuration');\n\n    _.each(Meteor.settings.servers, function(endpoints, serverType) {\n        _.each(endpoints, function(endpoint) {\n            const server = _.clone(endpoint);\n            server.origin = 'json';\n            server.type = serverType;\n\n            // Try to find a server with the same name/type/origin combination\n            const existingServer = Servers.findOne({\n                name: server.name,\n                type: server.type,\n                origin: server.origin\n            });\n\n            // Check if server was already added. Update it if so and insert if not\n            if (existingServer) {\n                const newServerData = _.clone(existingServer);\n                delete newServerData._id;\n                Servers.update(existingServer._id, { $set: newServerData });\n            } else {\n                Servers.insert(server);\n            }\n        });\n    });\n\n    OHIF.servers.control.resetCurrentServer();\n});\n\n// Validate the servers configuration\nMeteor.startup(() => {\n    // Save custom properties (if any)...\n    // \"Meteor.settings\" and \"Meteor.settings.public\" are set by default...\n    let custom = {\n        private: Meteor.settings.custom,\n        public: Meteor.settings.public.custom\n    };\n\n    // ... and remove them to prevent clean up\n    delete Meteor.settings.custom;\n    delete Meteor.settings.public.custom;\n\n    ServerConfiguration.clean(Meteor.settings);\n\n    // TODO: Make the error messages more clear\n    // Taking this out for now to prevent confusion.\n    // check(Meteor.settings, ServerConfiguration);\n\n    Meteor.settings.custom = custom.private;\n    Meteor.settings.public.custom = custom.public;\n\n    OHIF.log.info(JSON.stringify(Meteor.settings, null, 2));\n});\n","import { Meteor } from 'meteor/meteor';\nimport { OHIF } from 'meteor/ohif:core';\nimport { Servers, CurrentServer } from 'meteor/ohif:servers/both/collections';\n\nOHIF.servers.control = {\n    writeCallback(error, affected) {\n        if (error) {\n            throw new Meteor.Error('data-write', error);\n        }\n    },\n\n    resetCurrentServer() {\n        const currentServer = CurrentServer.findOne();\n        if (currentServer && Servers.find({ _id: currentServer.serverId }).count()) {\n            return;\n        }\n\n        const newServer = Servers.findOne({\n            origin: 'json',\n            type: Meteor.settings.defaultServiceType || 'dicomWeb'\n        });\n\n        if (newServer) {\n            CurrentServer.remove({});\n            CurrentServer.insert({\n                serverId: newServer._id\n            });\n        }\n    },\n\n    find(query) {\n        return Servers.find(query).fetch();\n    },\n\n    save(serverSettings) {\n        const query = {\n            _id: serverSettings._id\n        };\n        const options = {\n            upsert: true\n        };\n\n        if (!serverSettings._id) {\n            delete serverSettings._id;\n        }\n\n        return Servers.update(query, serverSettings, options, this.writeCallback);\n    },\n\n    setActive(serverId) {\n        CurrentServer.remove({});\n        CurrentServer.insert({\n            serverId: serverId\n        });\n    },\n\n    remove(serverId) {\n        const query = {\n            _id: serverId\n        };\n\n        const removeStatus = Servers.remove(query, this.writeCallback);\n\n        OHIF.servers.control.resetCurrentServer();\n\n        return removeStatus;\n    }\n};\n","import './control.js';\n"]}